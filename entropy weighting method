##Use R language
##Chinese,If translation is needed, please contact me.
## 定义归一化函数
Rescale = function(x, type=1) {
  # type=1正向指标, type=2负向指标
  rng = range(x, na.rm = TRUE)
  if (type == 1) {
    (0.996 - 0.002) * (x - rng[1]) / (rng[2] - rng[1]) + 0.002
  } else {
    (0.996 - 0.002) *  (rng[2] - x) / (rng[2] - rng[1]) + 0.002
  }
}
###为了避免归一化出现0或者1，将数据范围收缩至[0.002,0.996],可以视情况改变


#函数主体
Entropy_Weight = function(X, index) {
  # 实现用熵权法计算各指标(列）的权重及各数据行的得分
  # X为指标数据, 一行代表一个样本, 每列对应一个指标
  # index指示向量，指示各列正向指标还是负向指标，1表示正向指标，2表示负向指标
  # s返回各行（样本）得分，w返回各列权重
  
  pos = which(index == 1)
  neg = which(index != 1)
  
  # 数据归一化
  X[,pos] = lapply(X[,pos], Rescale, type=1)
  X[,neg] = lapply(X[,neg], Rescale, type=2)
  
  # 计算第j个指标下，第i个样本占该指标的比重p(i,j)           
  P = data.frame(lapply(X, function(x) x / sum(x)))
  
  # 计算第j个指标的熵值e(j)
  e = sapply(P, function(x) sum(x * log(x)) *(-1/log(nrow(P))))
  
  d = 1 - e         # 计算信息熵冗余度
  w = d / sum(d)   # 计算权重向量
  
  # 计算样本得分
  s = as.vector(100 * as.matrix(X) %*% w)
  
  list(w=w, s=s)
}

##################################################
#读取数据
data<-read.csv('D:/statistical software/R/R_Data_word/2020-01-01/资源利用效率.csv',sep=',',header=F,encoding='utf-8')

X = data[200:484, 11:15]
ind = c(2,2,1,1,2) #正向指标用1标识，负向指标用2标识

Entropy_Weight(X,ind)  #输出结果
